I"ˆ'<h1 id="pytorch-nearest-interpolation">Pytorch nearest interpolation</h1>

<h2 id="numpy-nearest-interpolation">numpy nearest interpolation</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="k">def</span> <span class="nf">nearest_inter</span><span class="p">(</span><span class="n">array</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="n">width</span><span class="p">):</span>
  <span class="s">'''
  array:  channel x height x width
  '''</span>
  <span class="n">channel</span><span class="p">,</span> <span class="n">ori_h</span><span class="p">,</span> <span class="n">ori_w</span> <span class="o">=</span> <span class="n">array</span><span class="p">.</span><span class="n">shape</span>
  <span class="n">ratio_h</span> <span class="o">=</span> <span class="n">ori_h</span> <span class="o">/</span> <span class="n">height</span>
  <span class="n">ratio_w</span> <span class="o">=</span> <span class="n">ori_w</span> <span class="o">/</span> <span class="n">width</span>
  <span class="n">target_array</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">channel</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="n">width</span><span class="p">))</span>
  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">height</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">width</span><span class="p">):</span>
      <span class="n">th</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">i</span> <span class="o">*</span> <span class="n">ratio_h</span><span class="p">)</span>
      <span class="n">tw</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">j</span> <span class="o">*</span> <span class="n">ratio_w</span><span class="p">)</span>
      <span class="n">target_array</span><span class="p">[:,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">array</span><span class="p">[:,</span> <span class="n">th</span><span class="p">,</span> <span class="n">tw</span><span class="p">]</span>
  <span class="k">return</span> <span class="n">target_array</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
  <span class="n">image</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">irmead</span><span class="p">(</span><span class="s">'note3.jpg'</span><span class="p">)</span>
  <span class="n">array</span> <span class="o">=</span> <span class="n">image</span><span class="p">.</span><span class="n">transpose</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
  <span class="n">t_array</span> <span class="o">=</span> <span class="n">nearest_inter</span><span class="p">(</span><span class="n">array</span><span class="p">,</span> <span class="mi">1200</span><span class="p">,</span> <span class="mi">500</span><span class="p">)</span>
  <span class="n">t_array</span> <span class="o">=</span> <span class="n">t_array</span><span class="p">.</span><span class="n">transpose</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
  
  <span class="n">plt</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">flip</span><span class="p">(</span><span class="n">t_array</span><span class="p">,</span> <span class="mi">2</span><span class="p">).</span><span class="n">astype</span><span class="p">(</span><span class="s">'uint8'</span><span class="p">))</span>
  <span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="pytorch-version">Pytorch version</h2>

<p>Almost same as numpy.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span>  <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">torch</span>

<span class="k">def</span> <span class="nf">pytorch_nearest_inter</span><span class="p">(</span><span class="n">array</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="n">width</span><span class="p">):</span>
    <span class="s">'''
    array: format channel, height, width
    '''</span>
    <span class="n">channel</span><span class="p">,</span> <span class="n">ori_h</span><span class="p">,</span> <span class="n">ori_w</span> <span class="o">=</span> <span class="n">array</span><span class="p">.</span><span class="n">shape</span>
    <span class="n">ratio_h</span> <span class="o">=</span> <span class="n">ori_h</span> <span class="o">/</span> <span class="n">height</span>
    <span class="n">ratio_w</span> <span class="o">=</span> <span class="n">ori_w</span> <span class="o">/</span> <span class="n">width</span>
    <span class="n">target_array</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">channel</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="n">width</span><span class="p">))</span>

    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">height</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">width</span><span class="p">):</span>
            <span class="n">th</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">i</span> <span class="o">*</span> <span class="n">ratio_h</span><span class="p">)</span>
            <span class="n">tw</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">j</span> <span class="o">*</span> <span class="n">ratio_w</span><span class="p">)</span>
            <span class="n">target_array</span><span class="p">[:,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">array</span><span class="p">[:,</span> <span class="n">th</span><span class="p">,</span> <span class="n">tw</span><span class="p">]</span>

    <span class="k">return</span> <span class="n">target_array</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
    <span class="n">image</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imread</span><span class="p">(</span><span class="s">'note3.jpg'</span><span class="p">)</span>
    <span class="n">array</span> <span class="o">=</span> <span class="n">image</span><span class="p">.</span><span class="n">transpose</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">tensor_array</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">from_numpy</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>
    <span class="n">t_array2</span> <span class="o">=</span> <span class="n">pytorch_nearest_inter</span><span class="p">(</span><span class="n">tensor_array</span><span class="p">,</span> <span class="mi">1200</span><span class="p">,</span> <span class="mi">300</span><span class="p">).</span><span class="n">numpy</span><span class="p">()</span>
    <span class="n">t_array2</span> <span class="o">=</span> <span class="n">t_array2</span><span class="p">.</span><span class="n">transpose</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>

    <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">flip</span><span class="p">(</span><span class="n">t_array2</span><span class="p">,</span> <span class="mi">2</span><span class="p">).</span><span class="n">astype</span><span class="p">(</span><span class="s">'uint8'</span><span class="p">))</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p>I think something will be slightly different when using GPU to calculate.</p>
:ET