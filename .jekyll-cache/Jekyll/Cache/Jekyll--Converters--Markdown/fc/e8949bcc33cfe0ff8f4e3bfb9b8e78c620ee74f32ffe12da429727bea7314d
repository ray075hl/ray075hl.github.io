I"•<h2 id="1range-based-for-loop">1.Range-Based for loop:</h2>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">someNums</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">101</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">2040</span><span class="p">};</span>
<span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="n">aNum</span> <span class="o">:</span> <span class="n">someNums</span><span class="p">)</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"element : "</span> <span class="o">&lt;&lt;</span> <span class="n">aNum</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
</code></pre></div></div>
<h2 id="2-auto-return">2. auto return</h2>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">const</span> <span class="kt">double</span> <span class="n">Pi</span> <span class="o">=</span> <span class="mf">3.1415</span><span class="p">;</span>

<span class="k">auto</span> <span class="nf">Area</span><span class="p">(</span><span class="kt">double</span> <span class="n">radius</span><span class="p">){</span>
    <span class="k">return</span> <span class="n">Pi</span> <span class="o">*</span> <span class="n">radius</span> <span class="o">*</span> <span class="n">radius</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<h2 id="3-lambda-function">3. <strong><em>lambda function</em></strong></h2>
<p>[<strong><em>optional parameters</em></strong>] (<em>parameter list</em>) {<em>statements</em>}</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">for_each</span> <span class="p">(</span><span class="n">array</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">array</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> \
    <span class="p">[](</span><span class="kt">int</span> <span class="n">Element</span><span class="p">)</span> <span class="p">{</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">Element</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;})</span>

<span class="n">sort</span> <span class="p">(</span><span class="n">myNums</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">myNums</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> \
    <span class="p">[](</span><span class="kt">int</span> <span class="n">Num1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">Num2</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span> <span class="p">(</span><span class="n">Num2</span> <span class="o">&lt;</span> <span class="n">Num1</span><span class="p">)});</span>

</code></pre></div></div>
<h2 id="0-new-and-delete">0. <em>new</em> and <em>delete</em></h2>
<p><em>new</em> return a pointer.</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span><span class="o">*</span> <span class="n">myNumber</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">;</span>
<span class="k">delete</span> <span class="n">myNumber</span><span class="p">;</span>

<span class="kt">int</span><span class="o">*</span> <span class="n">myNumbers</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[</span><span class="n">elementNum</span><span class="p">];</span>
<span class="k">delete</span><span class="p">[]</span> <span class="n">myNumbers</span><span class="p">;</span>
</code></pre></div></div>

:ET